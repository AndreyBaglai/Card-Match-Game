{"version":3,"sources":["constants/index.js","components/Card.jsx","services/Game.js","components/GameBoard.jsx","components/Banner.jsx","App.jsx","index.js"],"names":["CARD_SIZES","GAME_STATUS","CARD_STATUS","useStyles","createUseStyles","card","padding","borderRadius","height","width","border","position","transition","transformStyle","margin","selected","borderColor","transform","front","matched","backgroundColor","inner","backfaceVisibility","back","Card","data","handleClick","index","id","url","status","classes","isSelected","isMatched","className","classnames","onClick","src","alt","LIMIT","Math","ceil","DECK_SIZE","urls","getRandomUrls","deck","concat","length","pop","sort","random","imageUrl","urlArray","push","initalState","isLoading","isChecking","count","firstCard","secondCard","GameBoard","initgame","setState","game","toggleCard","newDeck","state","newCard","checkSelectedCards","first","second","setTimeout","checkGame","resetCards","Object","keys","filter","key","find","props","handleFinish","flipCard","this","startGame","style","display","gridTemplateColumns","justifyItems","entries","map","value","newState","gameStatus","React","Component","root","top","left","background","alignItems","button","Banner","App","useState","setGameStatus","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ca4e507.chunk.js","sourcesContent":["export const CARD_SIZES = { width: 150, height: 250 };\r\nexport const DECK_SIZE = 15;\r\n\r\nexport const GAME_STATUS = {\r\n  IN_PROGRESS: \"IN_PROGRESS\",\r\n  CREATING: \"CREATING\",\r\n  RESETTING: \"RESETTING\",\r\n  FINISHED: \"FINISHED\"\r\n};\r\n\r\nexport const CARD_STATUS = {\r\n  SELECTED: \"SELECTED\",\r\n  MATCHED: \"MATCHED\",\r\n  HIDDEN: \"HIDDEN\"\r\n};\r\n","import React from \"react\";\r\nimport { createUseStyles } from \"react-jss\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { CARD_STATUS, CARD_SIZES } from \"../constants\";\r\n\r\nconst useStyles = createUseStyles({\r\n  card: {\r\n    padding: 5,\r\n    borderRadius: 5,\r\n    height: CARD_SIZES.height,\r\n    width: CARD_SIZES.width,\r\n    border: \"black 5px solid\",\r\n    position: \"relative\",\r\n    transition: \"all 0.4s linear\",\r\n    transformStyle: \"preserve-3d\",\r\n    margin: \"5px\"\r\n  },\r\n  selected: {\r\n    borderColor: \"blue\",\r\n    transform: \"rotateY(180deg)\"\r\n  },\r\n  front: {\r\n    transform: \"rotateY(180deg)\"\r\n  },\r\n  matched: {\r\n    borderColor: \"green\",\r\n    backgroundColor: \"white\",\r\n    transform: \"rotateY(180deg)\"\r\n  },\r\n  inner: {\r\n    position: \"absolute\",\r\n    backfaceVisibility: \"hidden\"\r\n  },\r\n  back: {\r\n    // transform: \"rotateY(180deg)\"\r\n  }\r\n});\r\n\r\nconst Card = ({ data, handleClick, index }) => {\r\n  const { id, url, status } = data;\r\n  const classes = useStyles();\r\n  const isSelected = status === CARD_STATUS.SELECTED;\r\n  const isMatched = status === CARD_STATUS.MATCHED;\r\n\r\n  const onCardClick = () => {\r\n    if (status === CARD_STATUS.HIDDEN) {\r\n      handleClick(index, id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classnames(classes.card, {\r\n        [classes.selected]: isSelected,\r\n        [classes.matched]: isMatched\r\n      })}\r\n      onClick={onCardClick}\r\n    >\r\n      <div className={classnames(classes.inner, classes.front)}>\r\n        <img src={url} alt=\"card\" />\r\n      </div>\r\n      <div className={classnames(classes.inner, classes.back)}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { CARD_STATUS, DECK_SIZE, CARD_SIZES } from \"../constants\";\r\n\r\nconst BASE_URL = \"https://picsum.photos\";\r\nconst LIMIT = Math.ceil(DECK_SIZE / 2);\r\n\r\n/**\r\n * Create new game\r\n */\r\nexport default () => {\r\n  const urls = getRandomUrls();\r\n  const deck = urls.concat(urls);\r\n\r\n  while (deck.length > DECK_SIZE) {\r\n    deck.pop();\r\n  }\r\n\r\n  const shuffledDeck = deck.sort(() => 0.5 - Math.random());\r\n\r\n  return shuffledDeck;\r\n};\r\n\r\nexport const getRandomUrls = () => {\r\n  const imageUrl = `${BASE_URL}/${CARD_SIZES.width}/${CARD_SIZES.height}?random=`;\r\n  const urlArray = [];\r\n\r\n  for (let index = 0; index < LIMIT; index++) {\r\n    urlArray.push({\r\n      id: index,\r\n      url: imageUrl + index,\r\n      status: CARD_STATUS.HIDDEN\r\n    });\r\n  }\r\n\r\n  return urlArray;\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport React from \"react\";\r\n\r\nimport Card from \"./Card\";\r\nimport game from \"../services/Game\";\r\nimport { CARD_STATUS, GAME_STATUS, DECK_SIZE } from \"../constants\";\r\n\r\nconst DELAY = 800;\r\nconst initalState = {\r\n  isLoading: true,\r\n  isChecking: false,\r\n  deck: {},\r\n  count: 0,\r\n  firstCard: null,\r\n  secondCard: null\r\n};\r\n\r\nclass GameBoard extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { ...initalState };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initgame();\r\n    this.props.startGame();\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, newState) {\r\n    if (props.gameStatus === GAME_STATUS.RESETTING) {\r\n      newState = { ...initalState };\r\n      newState.deck = game();\r\n      newState.isLoading = false;\r\n      props.startGame();\r\n    }\r\n\r\n    return newState;\r\n  }\r\n\r\n  initgame = () => {\r\n    this.setState({ deck: game(), isLoading: false });\r\n  };\r\n\r\n  toggleCard = (index, status) => {\r\n    const newDeck = { ...this.state.deck };\r\n    const newCard = { ...newDeck[index] };\r\n    newCard.status = status;\r\n    newDeck[index] = newCard;\r\n\r\n    this.setState({ deck: newDeck });\r\n  };\r\n\r\n  checkSelectedCards = () => {\r\n    const { deck, firstCard, secondCard } = this.state;\r\n    const first = { ...deck[firstCard.index] };\r\n    const second = { ...deck[secondCard.index] };\r\n\r\n    if (firstCard.id === secondCard.id) {\r\n      first.status = CARD_STATUS.MATCHED;\r\n      second.status = CARD_STATUS.MATCHED;\r\n    } else {\r\n      first.status = CARD_STATUS.HIDDEN;\r\n      second.status = CARD_STATUS.HIDDEN;\r\n    }\r\n\r\n    const newDeck = {\r\n      ...deck,\r\n      [firstCard.index]: first,\r\n      [secondCard.index]: second\r\n    };\r\n\r\n    setTimeout(() => {\r\n      this.setState({ deck: newDeck });\r\n      this.checkGame();\r\n    }, DELAY);\r\n\r\n    setTimeout(this.resetCards, DELAY);\r\n  };\r\n\r\n  checkGame = () => {\r\n    const { deck } = this.state;\r\n\r\n    const matches = Object.keys(deck).filter(\r\n      key => deck[key].status === CARD_STATUS.MATCHED\r\n    );\r\n\r\n    if (matches.length === DECK_SIZE - 1) {\r\n      // if (true) {\r\n      const key = Object.keys(deck).find(\r\n        key => deck[key].status === CARD_STATUS.HIDDEN\r\n      );\r\n\r\n      this.setState({\r\n        deck: {\r\n          ...deck,\r\n          [key]: { ...deck[key], status: CARD_STATUS.MATCHED }\r\n        }\r\n      });\r\n\r\n      this.props.handleFinish();\r\n    }\r\n  };\r\n\r\n  resetCards = () => {\r\n    this.setState({\r\n      firstCard: null,\r\n      secondCard: null,\r\n      isChecking: false\r\n    });\r\n  };\r\n\r\n  flipCard = (index, id) => {\r\n    const { count } = this.state;\r\n\r\n    if (count < 2) {\r\n      this.setState({ count: count + 1 }, () => {\r\n        if (this.state.count === 1) {\r\n          this.setState({ firstCard: { index, id } });\r\n        } else {\r\n          this.setState(\r\n            {\r\n              secondCard: { index, id },\r\n              count: 0,\r\n              isChecking: true\r\n            },\r\n            this.checkSelectedCards\r\n          );\r\n        }\r\n\r\n        this.toggleCard(index, CARD_STATUS.SELECTED);\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClick = (index, id) => {\r\n    const { isChecking } = this.state;\r\n    if (!isChecking) {\r\n      this.flipCard(index, id);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { deck, isLoading } = this.state;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr\",\r\n          justifyItems: \"center\"\r\n        }}\r\n      >\r\n        {isLoading\r\n          ? \"Loading...\"\r\n          : Object.entries(deck).map(([key, value]) => {\r\n              return (\r\n                <Card\r\n                  key={key}\r\n                  index={key}\r\n                  data={value}\r\n                  handleClick={this.handleClick}\r\n                />\r\n              );\r\n            })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameBoard;\r\n","import React from \"react\";\r\nimport { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  root: {\r\n    position: \"fixed\",\r\n    display: \"grid\",\r\n    top: \"30%\",\r\n    left: \"25%\",\r\n    width: \"50%\",\r\n    height: 200,\r\n    background: \"aliceblue\",\r\n    justifyItems: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  button: {\r\n    background: \"white\",\r\n    border: \"solid 1px black\",\r\n    padding: \"1em 2em\"\r\n  }\r\n});\r\n\r\nconst Banner = ({ handleClick }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>Congratulations, you've won!</div>\r\n      <button className={classes.button} onClick={handleClick}>\r\n        Play Again\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import React, { useState } from \"react\";\n\nimport GameBoard from \"./components/GameBoard\";\nimport Banner from \"./components/Banner\";\n\nimport { GAME_STATUS } from \"./constants\";\n\nconst App = () => {\n  const [gameStatus, setGameStatus] = useState(GAME_STATUS.CREATING);\n\n  const gameFinished = () => {\n    setGameStatus(GAME_STATUS.FINISHED);\n  };\n\n  const resetGame = () => {\n    setGameStatus(GAME_STATUS.RESETTING);\n  };\n\n  const setGameToInProgress = () => {\n    setGameStatus(GAME_STATUS.IN_PROGRESS);\n  };\n\n  return (\n    <div>\n      <header>\n        <h1>Card Match Game</h1>\n      </header>\n      <div>\n        <GameBoard\n          gameStatus={gameStatus}\n          startGame={setGameToInProgress}\n          handleFinish={gameFinished}\n        />\n        {gameStatus === GAME_STATUS.FINISHED && (\n          <Banner handleClick={resetGame} />\n        )}\n      </div>\n      <footer>\n        Created by <a href=\"https://www.kazyamada.com/\">Kaz Yamada</a>\n        <a href=\"https://github.com/kaz-yamada/Card-Match-Game\">Source</a>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \n\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();"],"sourceRoot":""}